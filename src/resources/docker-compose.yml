---
version: "3.6"
services:
    PrivateBin:
        container_name: "PrivateBin"
        image: "privatebin/nginx-fpm-alpine:latest"
        ports:
            - "1992:8080/tcp"
        read_only: true
        restart: "unless-stopped"
        volumes:
            - "/dockerData/privatebin/conf.php:/srv/cfg/conf.php:ro"
            - "/dockerData/privatebin/privatebin-data:/srv/data"
    metabase:
        container_name: "metabase"
        image: "metabase/metabase:latest"
        ports:
            - "1993:3000/tcp"
        restart: "unless-stopped"
        volumes:
            - "/dockerData/metabase:/metabase-data"
    portainer:
        container_name: "portainer"
        image: "portainer/portainer-ce:latest"
        ports:
            - "8000:8000/tcp"
            - "9000:9000/tcp"
        restart: "always"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "/dockerData/portainer:/data"
    qbittorrent-vpn:
        container_name: "qbittorrent-vpn"
        environment:
            - "VPN_ENABLED=yes"
            - "VPN_TYPE=wireguard"
            - "LAN_NETWORK=192.168.0.0/24"
        image: "dyonr/qbittorrentvpn:latest"
        ports:
            - "8080:8080/tcp"
        restart: "unless-stopped"
        volumes:
            - "/media/easystore/Torrents:/downloads"
            - "/dockerData/qbittorrent:/config"
    shields.io:
        container_name: "shields.io"
        environment:
            - "GH_TOKEN=FIXME" #! Change this
        image: "shieldsio/shields:next"
        ports:
            - "2001:80/tcp"
        restart: "unless-stopped"
    teamspeak:
        container_name: "teamspeak"
        environment:
            - "TS3SERVER_LICENSE=accept"
        image: "teamspeak:latest"
        ports:
            - "10011:10011/tcp"
            - "30033:30033/tcp"
            - "9987:9987/udp"
        restart: "unless-stopped"
        volumes:
            - "/dockerData/teamspeak3server:/var/ts3server"
    vaultwarden:
        container_name: "vaultwarden"
        image: "vaultwarden/server:latest"
        ports:
            - "3012:3012/tcp"
            - "1337:80/tcp"
        restart: "unless-stopped"
        volumes:
            - "/dockerData/vaultwarden:/data"
    watchtower:
        container_name: "watchtower"
        image: "containrrr/watchtower:latest"
        restart: "unless-stopped"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
    prowlarr:
        container_name: "prowlarr"
        image: "lscr.io/linuxserver/prowlarr:develop"
        ports:
        - "9696:9696"
        restart: "unless-stopped"
        volumes:
        - "/dockerData/prowlarr:/config"
    overseerr:
        container_name: "overseerr"
        image: "lscr.io/linuxserver/overseerr:latest"
        ports:
        - "5055:5055"
        restart: "unless-stopped"
        volumes:
        - "/dockerData/overseerr:/config"
    radarr:
        container_name: "radarr"
        environment:
        - "PUID=1000"
        - "PGID=1005"
        image: "lscr.io/linuxserver/radarr:latest"
        ports:
        - "7878:7878/tcp"
        restart: "unless-stopped"
        volumes:
        - "/dockerData/radarr:/config"
        - "/media/easystore/Movies:/movies"
        - "/media/easystore/Torrents:/downloads"
    readarr:
        container_name: "readarr"
        environment:
        - "PUID=1000"
        - "PGID=1005"
        image: "lscr.io/linuxserver/readarr:develop"
        ports:
        - "8787:8787/tcp"
        restart: "unless-stopped"
        volumes:
        - "/media/easystore/Books:/books"
        - "/media/easystore/Torrents:/downloads"
        - "/dockerData/readarr:/config"
    requestrr:
        container_name: "requestrr"
        image: "lscr.io/linuxserver/requestrr:latest"
        ports:
        - "4545:4545/tcp"
        restart: "unless-stopped"
        volumes:
        - "/dockerData/requestrr:/config"
    sonarr:
        container_name: "sonarr"
        environment:
        - "PUID=1000"
        - "PGID=1005"
        image: "lscr.io/linuxserver/sonarr:latest"
        ports:
        - "8989:8989/tcp"
        restart: "unless-stopped"
        volumes:
        - "/dockerData/sonarr:/config"
        - "/media/easystore/TV:/tv"
        - "/media/easystore/Torrents:/downloads"
    tautulli:
        container_name: "tautulli"
        image: "lscr.io/linuxserver/tautulli:latest"
        ports:
        - "8181:8181/tcp"
        restart: "unless-stopped"
        volumes:
        - "/dockerData/tautulli:/config"
    bazarr:
        container_name: "bazarr"
        environment:
        - "PUID=1000"
        - "PGID=1005"
        image: "lscr.io/linuxserver/bazarr:latest"
        ports:
        - "6767:6767/tcp"
        restart: "unless-stopped"
        volumes:
        - "/media/easystore/TV:/tv"
        - "/dockerData/bazarr:/config"
        - "/media/easystore/Movies:/movies"
    homepage:
        image: ghcr.io/benphelps/homepage:latest
        container_name: homepage
        ports:
        - 1994:3000
        restart: "unless-stopped"
        volumes:
        - /dockerData/homepage:/app/config
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - /media/easystore:/media/easystore:ro
    scrutiny:
        container_name: scrutiny
        image: ghcr.io/analogj/scrutiny:master-omnibus
        cap_add:
        - SYS_RAWIO
        - SYS_ADMIN
        ports:
        - "1995:8080"
        restart: "unless-stopped"
        volumes:
        - /run/udev:/run/udev:ro
        - /dockerData/scrutiny/config:/opt/scrutiny/config
        - /dockerData/scrutiny/influxdb:/opt/scrutiny/influxdb
        devices:
        - "/dev/sda"
        - "/dev/sdb"
    wg-easy:
        container_name: wg-easy
        image: weejewel/wg-easy
        environment:
        - WG_HOST=real.chse.dev
        ports:
        - "51820:51820/udp"
        - "51821:51821/tcp"
        restart: unless-stopped
        volumes:
        - /dockerData/wg-easy:/etc/wireguard
        cap_add:
        - NET_ADMIN
        - SYS_MODULE
        sysctls:
        - net.ipv4.ip_forward=1
        - net.ipv4.conf.all.src_valid_mark=1
    gokapi:
        container_name: "gokapi"
        image: "f0rc3/gokapi:latest"
        ports:
        - "53842:53842"
        restart: "unless-stopped"
        volumes:
            - "/dockerData/gokapi/data:/app/data"
            - "/dockerData/gokapi/config:/app/config"
    openbooks:
        container_name: OpenBooks
        image: evanbuss/openbooks:latest
        ports:
        - "1996:80"
        restart: unless-stopped
        volumes:
        - "/dockerData/openbooks:/books"
        command: --persist --name user --useragent HexChat 2.9.1
    phpmyadmin:
        container_name: phpmyadmin
        image: phpmyadmin:latest
        ports:
        - "1997:80"
        restart: unless-stopped
        volumes:
        - "/dockerData/phpmyadmin/config.inc.php:/etc/phpmyadmin/config.user.inc.php"
    lidarr:
        container_name: "lidarr-on-steroids"
        environment:
        - "PUID=1000"
        - "PGID=1005"
        image: "youegraillot/lidarr-on-steroids"
        ports:
        - "8686:8686/tcp"
        - "6595:6595/tcp"
        restart: "unless-stopped"
        volumes:
        - "/dockerData/lidarr-on-steroids/lidarr:/config"
        - "/dockerData/lidarr-on-steroids/deemix:/config_deemix"
        - "/media/easystore/Music:/music"
        - "/media/easystore/Torrents:/downloads"
    freshrss:
        container_name: "freshrss"
        image: "lscr.io/linuxserver/freshrss:latest"
        ports:
        - "2004:80"
        restart: "unless-stopped"
        volumes:
        - "/dockerData/freshrss:/config"
    bookstack:
        image: lscr.io/linuxserver/bookstack
        container_name: bookstack
        environment:
        - APP_URL=https://docs.chse.dev
        - DB_HOST=bookstack
        - DB_PORT=3306
        - DB_USER=bookstack
        - DB_PASS=qwerty #! Change this
        - DB_DATABASE=bookstack
        - APP_DEFAULT_DARK_MODE=true
        volumes:
        - /dockerData/bookstack:/config
        ports:
        - 6875:80
        restart: unless-stopped
    cyberchef:
        image: mpepping/cyberchef:latest
        container_name: cyberchef
        ports:
        - 2005:8000
        restart: unless-stopped
    pyload-ng:
        image: lscr.io/linuxserver/pyload-ng:latest
        container_name: pyload-ng
        environment:
        - PUID=1000
        - PGID=1005
        volumes:
        - /dockerData/pyload:/config
        - /media/easystore/Torrents:/downloads
        ports:
        - 2006:8000
        restart: unless-stopped
    nextcloud:
        container_name: nextcloud-aio-mastercontainer
        restart: always
        ports:
            - '11001:8080'
        environment:
            - APACHE_PORT=11000
            - TALK_PORT=3478
            - NEXTCLOUD_DATADIR=/media/easystore/Nextcloud
            - NEXTCLOUD_ADDITIONAL_APKS=imagemagick
            - NEXTCLOUD_ADDITIONAL_PHP_EXTENSIONS=imagick
            - NEXTCLOUD_ENABLE_DRI_DEVICE=true
            - SKIP_DOMAIN_VALIDATION=true
            - COLLABORA_SECCOMP_DISABLED=true
            - DISABLE_BACKUP_SECTION=true
        volumes:
            - 'nextcloud_aio_mastercontainer:/mnt/docker-aio-config'
            - '/var/run/docker.sock:/var/run/docker.sock:ro'
        image: 'nextcloud/all-in-one:latest'
    ghost:
        container_name: "ghost"
        environment:
        - "database__client=mysql"
        - "database__connection__host=192.168.86.2"
        - "database__connection__user=ghostblog"
        - "database__connection__password=password" #! Change This
        - "database__connection__database=ghostblog"
        - "url=https://blog.chse.dev"
        - "mail__from=Chase <ch@chasehall.net>"
        - "mail__options__auth__user=ch@chasehall.net"
        - "mail__options__auth__pass=password" #! Change This
        - "mail__options__host=mail.chse.dev"
        - "mail__options__port=587"
        - "mail__options__secure=false"
        - "mail__options__service=SMTP"
        - "mail__transport=SMTP"
        - "NODE_ENV=production"
        image: "ghost:latest"
        ports:
        - "2368:2368/tcp"
        restart: "unless-stopped"
        volumes:
        - "/dockerData/ghost:/var/lib/ghost/content"
    speedtest-tracker:
        container_name: speedtest-tracker
        ports:
            - '2007:80'
        volumes:
            - '/dockerData/speedtest-tracker:/config'
        environment:
            - "PUID=1000"
            - "PGID=1000"
        image: ghcr.io/alexjustesen/speedtest-tracker:latest
        restart: unless-stopped
    wizarr:
        container_name: wizarr
        image: ghcr.io/wizarrrr/wizarr
        ports:
        - 5690:5690
        volumes:
        - /dockerData/wizarr:/data/database
        environment:
        - APP_URL=https://joinplex.chse.dev
        - DISABLE_BUILTIN_AUTH=false
        - TZ=America/Chicago
        restart: unless-stopped
    healthchecks:
        image: lscr.io/linuxserver/healthchecks:latest
        container_name: healthchecks
        environment:
        - PUID=1000
        - PGID=1000
        - SITE_ROOT=https://hc.chse.dev
        - SITE_NAME=HealthChecks
        - DEFAULT_FROM_EMAIL=ch@chasehall.net
        - EMAIL_HOST=mail.chse.dev
        - EMAIL_PORT=465
        - EMAIL_HOST_USER=ch@chasehall.net
        - EMAIL_HOST_PASSWORD=password #! Change This
        - EMAIL_USE_TLS=True
        - SUPERUSER_EMAIL=ch@chasehall.net
        - SUPERUSER_PASSWORD=password #! Change This
        - DEBUG=False
        volumes:
        - /dockerData/healthchecks:/config
        ports:
        - 2008:8000
        restart: unless-stopped
    ntfy:
        image: binwiederhier/ntfy
        container_name: ntfy
        command:
        - serve --cache-file /var/cache/ntfy/cache.db
        environment:
        - TZ=UTC
        user: 1000:1000
        volumes:
        - /dockerData/ntfy:/var/cache/ntfy
        - /dockerData/ntfy/server.yml:/etc/ntfy/server.yml
        ports:
        - 2009:80
        restart: unless-stopped
    filebrowser:
        container_name: filebrowser
        ports:
            - '2010:80'
        volumes:
            - '/media/easystore:/srv'
            - '/dockerData/filebrowser/filebrowser.db:/database/filebrowser.db'
        environment:
            - "PUID=1000"
            - "PGID=1000"
        image: filebrowser/filebrowser:s6
        restart: unless-stopped
    plexautolanguages:
        image: remirigal/plex-auto-languages:latest
        container_name: PlexAutoLanguages
        environment:
        - TZ=America/Chicago
        volumes:
        - /dockerData/plexautolanguages:/config
        restart: unless-stopped
    mysql:
        container_name: mysql
        ports:
            - '3306:3306'
        volumes:
            - '/dockerData/mysql:/var/lib/mysql'
        image: mysql
        restart: unless-stopped
    umami:
        container_name: umami
        ports:
            - '2011:3000'
        environment:
        - DATABASE_TYPE=mysql
        - DATABASE_URL=mysql://umami:PASSWORDHERE@192.168.86.2:3306/umami #! Change This
        - HASH_SALT=<random-chars> #! Change This
        image: ghcr.io/umami-software/umami:mysql-latest
        restart: unless-stopped
    ittools:
        container_name: it-tools
        ports:
            - '2012:80'
        image: corentinth/it-tools:latest
        restart: unless-stopped
